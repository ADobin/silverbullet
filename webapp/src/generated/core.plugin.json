{
  "commands": {
    "Navigate To page": {
      "invoke": "linkNavigate",
      "key": "Ctrl-Enter",
      "mac": "Cmd-Enter"
    },
    "Insert Current Date": {
      "invoke": "insertToday",
      "slashCommand": "/today"
    },
    "Toggle : Heading 1": {
      "invoke": "toggle_h1",
      "mac": "Cmd-1",
      "key": "Ctrl-1"
    },
    "Toggle : Heading 2": {
      "invoke": "toggle_h2",
      "mac": "Cmd-2",
      "key": "Ctrl-2"
    },
    "Page: Delete": {
      "invoke": "deletePage"
    },
    "Page: Rename": {
      "invoke": "renamePage"
    },
    "Pages: Reindex": {
      "invoke": "reindexPages"
    },
    "Pages: Back Links": {
      "invoke": "showBackLinks"
    }
  },
  "events": {
    "page:click": [
      "taskToggle",
      "clickNavigate"
    ],
    "editor:complete": [
      "pageComplete"
    ],
    "page:index": [
      "indexLinks"
    ]
  },
  "functions": {
    "indexLinks": {
      "path": "core/page.ts",
      "code": "(function() {\n    const pageLinkRegex = /\\[\\[([\\w\\s\\/\\:,\\.\\-]+)\\]\\]/;\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    const wikilinkRegex = new RegExp(pageLinkRegex, \"g\");\n    async function indexLinks({ name , text  }) {\n        let backLinks = [];\n        for (let match of text.matchAll(wikilinkRegex)){\n            let toPage = match[1];\n            let pos = match.index;\n            backLinks.push({\n                key: `pl:${toPage}:${pos}`,\n                value: name\n            });\n        }\n        console.log(\"Found\", backLinks.length, \"wiki link(s)\");\n        await syscall(\"indexer.batchSet\", name, backLinks);\n    }\n    async function deletePage() {\n        let pageMeta = await syscall(\"editor.getCurrentPage\");\n        console.log(\"Navigating to start page\");\n        await syscall(\"editor.navigate\", \"start\");\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", pageMeta.name);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n    }\n    async function renamePage() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        const oldName = pageMeta.name;\n        console.log(\"Old name is\", oldName);\n        const newName = await syscall(\"editor.prompt\", `Rename ${oldName} to:`, oldName);\n        if (!newName) {\n            return;\n        }\n        console.log(\"New name\", newName);\n        let pagesToUpdate = await getBackLinks(oldName);\n        console.log(\"All pages containing backlinks\", pagesToUpdate);\n        let text = await syscall(\"editor.getText\");\n        console.log(\"Writing new page to space\");\n        await syscall(\"space.writePage\", newName, text);\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", oldName);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n        console.log(\"Navigating to new page\");\n        await syscall(\"editor.navigate\", newName);\n        let pageToUpdateSet = new Set();\n        for (let pageToUpdate of pagesToUpdate){\n            pageToUpdateSet.add(pageToUpdate.page);\n        }\n        for (let pageToUpdate1 of pageToUpdateSet){\n            console.log(\"Now going to update links in\", pageToUpdate1);\n            let { text  } = await syscall(\"space.readPage\", pageToUpdate1);\n            if (!text) {\n                continue;\n            }\n            let newText = text.replaceAll(`[[${oldName}]]`, `[[${newName}]]`);\n            if (text !== newText) {\n                console.log(\"Changes made, saving...\");\n                await syscall(\"space.writePage\", pageToUpdate1, newText);\n            }\n        }\n    }\n    async function getBackLinks(pageName) {\n        let allBackLinks = await syscall(\"indexer.scanPrefixGlobal\", `pl:${pageName}:`);\n        let pagesToUpdate = [];\n        for (let { key , value  } of allBackLinks){\n            let keyParts = key.split(\":\");\n            pagesToUpdate.push({\n                page: value,\n                pos: +keyParts[keyParts.length - 1]\n            });\n        }\n        return pagesToUpdate;\n    }\n    async function showBackLinks() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        let backLinks = await getBackLinks(pageMeta.name);\n        console.log(\"Backlinks\", backLinks);\n    }\n    async function reindex() {\n        await syscall(\"space.reindex\");\n    }\n    return {\n        indexLinks: indexLinks,\n        deletePage: deletePage,\n        renamePage: renamePage,\n        showBackLinks: showBackLinks,\n        reindex: reindex\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvd2ViYXBwL3NyYy9jb25zdGFudC50cyIsImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQU8sS0FBSyxDQUFDLGFBQWE7YUNBVixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO0lDWEQsS0FBSyxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsTUFBTSxnQkFBZ0IsQ0FBRzttQkFFN0IsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUUsSUFBSSxFQUFhLENBQUMsRUFBRSxDQUFDO1FBQzVELEdBQUcsQ0FBQyxTQUFTLEdBQXFDLENBQUMsQ0FBQztRQUNwRCxHQUFHLEVBQUUsR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRyxDQUFDO1lBQy9DLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLENBQUM7WUFDcEIsR0FBRyxDQUFDLEdBQUcs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\n",
      "functionName": "indexLinks"
    },
    "deletePage": {
      "path": "core/page.ts",
      "code": "(function() {\n    const pageLinkRegex = /\\[\\[([\\w\\s\\/\\:,\\.\\-]+)\\]\\]/;\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    const wikilinkRegex = new RegExp(pageLinkRegex, \"g\");\n    async function indexLinks({ name , text  }) {\n        let backLinks = [];\n        for (let match of text.matchAll(wikilinkRegex)){\n            let toPage = match[1];\n            let pos = match.index;\n            backLinks.push({\n                key: `pl:${toPage}:${pos}`,\n                value: name\n            });\n        }\n        console.log(\"Found\", backLinks.length, \"wiki link(s)\");\n        await syscall(\"indexer.batchSet\", name, backLinks);\n    }\n    async function deletePage() {\n        let pageMeta = await syscall(\"editor.getCurrentPage\");\n        console.log(\"Navigating to start page\");\n        await syscall(\"editor.navigate\", \"start\");\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", pageMeta.name);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n    }\n    async function renamePage() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        const oldName = pageMeta.name;\n        console.log(\"Old name is\", oldName);\n        const newName = await syscall(\"editor.prompt\", `Rename ${oldName} to:`, oldName);\n        if (!newName) {\n            return;\n        }\n        console.log(\"New name\", newName);\n        let pagesToUpdate = await getBackLinks(oldName);\n        console.log(\"All pages containing backlinks\", pagesToUpdate);\n        let text = await syscall(\"editor.getText\");\n        console.log(\"Writing new page to space\");\n        await syscall(\"space.writePage\", newName, text);\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", oldName);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n        console.log(\"Navigating to new page\");\n        await syscall(\"editor.navigate\", newName);\n        let pageToUpdateSet = new Set();\n        for (let pageToUpdate of pagesToUpdate){\n            pageToUpdateSet.add(pageToUpdate.page);\n        }\n        for (let pageToUpdate1 of pageToUpdateSet){\n            console.log(\"Now going to update links in\", pageToUpdate1);\n            let { text  } = await syscall(\"space.readPage\", pageToUpdate1);\n            if (!text) {\n                continue;\n            }\n            let newText = text.replaceAll(`[[${oldName}]]`, `[[${newName}]]`);\n            if (text !== newText) {\n                console.log(\"Changes made, saving...\");\n                await syscall(\"space.writePage\", pageToUpdate1, newText);\n            }\n        }\n    }\n    async function getBackLinks(pageName) {\n        let allBackLinks = await syscall(\"indexer.scanPrefixGlobal\", `pl:${pageName}:`);\n        let pagesToUpdate = [];\n        for (let { key , value  } of allBackLinks){\n            let keyParts = key.split(\":\");\n            pagesToUpdate.push({\n                page: value,\n                pos: +keyParts[keyParts.length - 1]\n            });\n        }\n        return pagesToUpdate;\n    }\n    async function showBackLinks() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        let backLinks = await getBackLinks(pageMeta.name);\n        console.log(\"Backlinks\", backLinks);\n    }\n    async function reindex() {\n        await syscall(\"space.reindex\");\n    }\n    return {\n        indexLinks: indexLinks,\n        deletePage: deletePage,\n        renamePage: renamePage,\n        showBackLinks: showBackLinks,\n        reindex: reindex\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvd2ViYXBwL3NyYy9jb25zdGFudC50cyIsImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQU8sS0FBSyxDQUFDLGFBQWE7YUNBVixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO0lDWEQsS0FBSyxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsTUFBTSxnQkFBZ0IsQ0FBRzttQkFFN0IsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUUsSUFBSSxFQUFhLENBQUMsRUFBRSxDQUFDO1FBQzVELEdBQUcsQ0FBQyxTQUFTLEdBQXFDLENBQUMsQ0FBQztRQUNwRCxHQUFHLEVBQUUsR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRyxDQUFDO1lBQy9DLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLENBQUM7WUFDcEIsR0FBRyxDQUFDLEdBQUcs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\n",
      "functionName": "deletePage"
    },
    "showBackLinks": {
      "path": "core/page.ts",
      "code": "(function() {\n    const pageLinkRegex = /\\[\\[([\\w\\s\\/\\:,\\.\\-]+)\\]\\]/;\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    const wikilinkRegex = new RegExp(pageLinkRegex, \"g\");\n    async function indexLinks({ name , text  }) {\n        let backLinks = [];\n        for (let match of text.matchAll(wikilinkRegex)){\n            let toPage = match[1];\n            let pos = match.index;\n            backLinks.push({\n                key: `pl:${toPage}:${pos}`,\n                value: name\n            });\n        }\n        console.log(\"Found\", backLinks.length, \"wiki link(s)\");\n        await syscall(\"indexer.batchSet\", name, backLinks);\n    }\n    async function deletePage() {\n        let pageMeta = await syscall(\"editor.getCurrentPage\");\n        console.log(\"Navigating to start page\");\n        await syscall(\"editor.navigate\", \"start\");\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", pageMeta.name);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n    }\n    async function renamePage() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        const oldName = pageMeta.name;\n        console.log(\"Old name is\", oldName);\n        const newName = await syscall(\"editor.prompt\", `Rename ${oldName} to:`, oldName);\n        if (!newName) {\n            return;\n        }\n        console.log(\"New name\", newName);\n        let pagesToUpdate = await getBackLinks(oldName);\n        console.log(\"All pages containing backlinks\", pagesToUpdate);\n        let text = await syscall(\"editor.getText\");\n        console.log(\"Writing new page to space\");\n        await syscall(\"space.writePage\", newName, text);\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", oldName);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n        console.log(\"Navigating to new page\");\n        await syscall(\"editor.navigate\", newName);\n        let pageToUpdateSet = new Set();\n        for (let pageToUpdate of pagesToUpdate){\n            pageToUpdateSet.add(pageToUpdate.page);\n        }\n        for (let pageToUpdate1 of pageToUpdateSet){\n            console.log(\"Now going to update links in\", pageToUpdate1);\n            let { text  } = await syscall(\"space.readPage\", pageToUpdate1);\n            if (!text) {\n                continue;\n            }\n            let newText = text.replaceAll(`[[${oldName}]]`, `[[${newName}]]`);\n            if (text !== newText) {\n                console.log(\"Changes made, saving...\");\n                await syscall(\"space.writePage\", pageToUpdate1, newText);\n            }\n        }\n    }\n    async function getBackLinks(pageName) {\n        let allBackLinks = await syscall(\"indexer.scanPrefixGlobal\", `pl:${pageName}:`);\n        let pagesToUpdate = [];\n        for (let { key , value  } of allBackLinks){\n            let keyParts = key.split(\":\");\n            pagesToUpdate.push({\n                page: value,\n                pos: +keyParts[keyParts.length - 1]\n            });\n        }\n        return pagesToUpdate;\n    }\n    async function showBackLinks() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        let backLinks = await getBackLinks(pageMeta.name);\n        console.log(\"Backlinks\", backLinks);\n    }\n    async function reindex() {\n        await syscall(\"space.reindex\");\n    }\n    return {\n        indexLinks: indexLinks,\n        deletePage: deletePage,\n        renamePage: renamePage,\n        showBackLinks: showBackLinks,\n        reindex: reindex\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvd2ViYXBwL3NyYy9jb25zdGFudC50cyIsImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQU8sS0FBSyxDQUFDLGFBQWE7YUNBVixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO0lDWEQsS0FBSyxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsTUFBTSxnQkFBZ0IsQ0FBRzttQkFFN0IsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUUsSUFBSSxFQUFhLENBQUMsRUFBRSxDQUFDO1FBQzVELEdBQUcsQ0FBQyxTQUFTLEdBQXFDLENBQUMsQ0FBQztRQUNwRCxHQUFHLEVBQUUsR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRyxDQUFDO1lBQy9DLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLENBQUM7WUFDcEIsR0FBRyxDQUFDLEdBQUcs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\n",
      "functionName": "showBackLinks"
    },
    "renamePage": {
      "path": "core/page.ts",
      "code": "(function() {\n    const pageLinkRegex = /\\[\\[([\\w\\s\\/\\:,\\.\\-]+)\\]\\]/;\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    const wikilinkRegex = new RegExp(pageLinkRegex, \"g\");\n    async function indexLinks({ name , text  }) {\n        let backLinks = [];\n        for (let match of text.matchAll(wikilinkRegex)){\n            let toPage = match[1];\n            let pos = match.index;\n            backLinks.push({\n                key: `pl:${toPage}:${pos}`,\n                value: name\n            });\n        }\n        console.log(\"Found\", backLinks.length, \"wiki link(s)\");\n        await syscall(\"indexer.batchSet\", name, backLinks);\n    }\n    async function deletePage() {\n        let pageMeta = await syscall(\"editor.getCurrentPage\");\n        console.log(\"Navigating to start page\");\n        await syscall(\"editor.navigate\", \"start\");\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", pageMeta.name);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n    }\n    async function renamePage() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        const oldName = pageMeta.name;\n        console.log(\"Old name is\", oldName);\n        const newName = await syscall(\"editor.prompt\", `Rename ${oldName} to:`, oldName);\n        if (!newName) {\n            return;\n        }\n        console.log(\"New name\", newName);\n        let pagesToUpdate = await getBackLinks(oldName);\n        console.log(\"All pages containing backlinks\", pagesToUpdate);\n        let text = await syscall(\"editor.getText\");\n        console.log(\"Writing new page to space\");\n        await syscall(\"space.writePage\", newName, text);\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", oldName);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n        console.log(\"Navigating to new page\");\n        await syscall(\"editor.navigate\", newName);\n        let pageToUpdateSet = new Set();\n        for (let pageToUpdate of pagesToUpdate){\n            pageToUpdateSet.add(pageToUpdate.page);\n        }\n        for (let pageToUpdate1 of pageToUpdateSet){\n            console.log(\"Now going to update links in\", pageToUpdate1);\n            let { text  } = await syscall(\"space.readPage\", pageToUpdate1);\n            if (!text) {\n                continue;\n            }\n            let newText = text.replaceAll(`[[${oldName}]]`, `[[${newName}]]`);\n            if (text !== newText) {\n                console.log(\"Changes made, saving...\");\n                await syscall(\"space.writePage\", pageToUpdate1, newText);\n            }\n        }\n    }\n    async function getBackLinks(pageName) {\n        let allBackLinks = await syscall(\"indexer.scanPrefixGlobal\", `pl:${pageName}:`);\n        let pagesToUpdate = [];\n        for (let { key , value  } of allBackLinks){\n            let keyParts = key.split(\":\");\n            pagesToUpdate.push({\n                page: value,\n                pos: +keyParts[keyParts.length - 1]\n            });\n        }\n        return pagesToUpdate;\n    }\n    async function showBackLinks() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        let backLinks = await getBackLinks(pageMeta.name);\n        console.log(\"Backlinks\", backLinks);\n    }\n    async function reindex() {\n        await syscall(\"space.reindex\");\n    }\n    return {\n        indexLinks: indexLinks,\n        deletePage: deletePage,\n        renamePage: renamePage,\n        showBackLinks: showBackLinks,\n        reindex: reindex\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvd2ViYXBwL3NyYy9jb25zdGFudC50cyIsImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQU8sS0FBSyxDQUFDLGFBQWE7YUNBVixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO0lDWEQsS0FBSyxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsTUFBTSxnQkFBZ0IsQ0FBRzttQkFFN0IsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUUsSUFBSSxFQUFhLENBQUMsRUFBRSxDQUFDO1FBQzVELEdBQUcsQ0FBQyxTQUFTLEdBQXFDLENBQUMsQ0FBQztRQUNwRCxHQUFHLEVBQUUsR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRyxDQUFDO1lBQy9DLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLENBQUM7WUFDcEIsR0FBRyxDQUFDLEdBQUcs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\n",
      "functionName": "renamePage"
    },
    "reindexPages": {
      "path": "core/page.ts",
      "code": "(function() {\n    const pageLinkRegex = /\\[\\[([\\w\\s\\/\\:,\\.\\-]+)\\]\\]/;\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    const wikilinkRegex = new RegExp(pageLinkRegex, \"g\");\n    async function indexLinks({ name , text  }) {\n        let backLinks = [];\n        for (let match of text.matchAll(wikilinkRegex)){\n            let toPage = match[1];\n            let pos = match.index;\n            backLinks.push({\n                key: `pl:${toPage}:${pos}`,\n                value: name\n            });\n        }\n        console.log(\"Found\", backLinks.length, \"wiki link(s)\");\n        await syscall(\"indexer.batchSet\", name, backLinks);\n    }\n    async function deletePage() {\n        let pageMeta = await syscall(\"editor.getCurrentPage\");\n        console.log(\"Navigating to start page\");\n        await syscall(\"editor.navigate\", \"start\");\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", pageMeta.name);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n    }\n    async function renamePage() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        const oldName = pageMeta.name;\n        console.log(\"Old name is\", oldName);\n        const newName = await syscall(\"editor.prompt\", `Rename ${oldName} to:`, oldName);\n        if (!newName) {\n            return;\n        }\n        console.log(\"New name\", newName);\n        let pagesToUpdate = await getBackLinks(oldName);\n        console.log(\"All pages containing backlinks\", pagesToUpdate);\n        let text = await syscall(\"editor.getText\");\n        console.log(\"Writing new page to space\");\n        await syscall(\"space.writePage\", newName, text);\n        console.log(\"Deleting page from space\");\n        await syscall(\"space.deletePage\", oldName);\n        console.log(\"Reloading page list\");\n        await syscall(\"space.reloadPageList\");\n        console.log(\"Navigating to new page\");\n        await syscall(\"editor.navigate\", newName);\n        let pageToUpdateSet = new Set();\n        for (let pageToUpdate of pagesToUpdate){\n            pageToUpdateSet.add(pageToUpdate.page);\n        }\n        for (let pageToUpdate1 of pageToUpdateSet){\n            console.log(\"Now going to update links in\", pageToUpdate1);\n            let { text  } = await syscall(\"space.readPage\", pageToUpdate1);\n            if (!text) {\n                continue;\n            }\n            let newText = text.replaceAll(`[[${oldName}]]`, `[[${newName}]]`);\n            if (text !== newText) {\n                console.log(\"Changes made, saving...\");\n                await syscall(\"space.writePage\", pageToUpdate1, newText);\n            }\n        }\n    }\n    async function getBackLinks(pageName) {\n        let allBackLinks = await syscall(\"indexer.scanPrefixGlobal\", `pl:${pageName}:`);\n        let pagesToUpdate = [];\n        for (let { key , value  } of allBackLinks){\n            let keyParts = key.split(\":\");\n            pagesToUpdate.push({\n                page: value,\n                pos: +keyParts[keyParts.length - 1]\n            });\n        }\n        return pagesToUpdate;\n    }\n    async function showBackLinks() {\n        const pageMeta = await syscall(\"editor.getCurrentPage\");\n        let backLinks = await getBackLinks(pageMeta.name);\n        console.log(\"Backlinks\", backLinks);\n    }\n    async function reindex() {\n        await syscall(\"space.reindex\");\n    }\n    return {\n        indexLinks: indexLinks,\n        deletePage: deletePage,\n        renamePage: renamePage,\n        showBackLinks: showBackLinks,\n        reindex: reindex\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvd2ViYXBwL3NyYy9jb25zdGFudC50cyIsImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQU8sS0FBSyxDQUFDLGFBQWE7YUNBVixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO0lDWEQsS0FBSyxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsTUFBTSxnQkFBZ0IsQ0FBRzttQkFFN0IsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUUsSUFBSSxFQUFhLENBQUMsRUFBRSxDQUFDO1FBQzVELEdBQUcsQ0FBQyxTQUFTLEdBQXFDLENBQUMsQ0FBQztRQUNwRCxHQUFHLEVBQUUsR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRyxDQUFDO1lBQy9DLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLENBQUM7WUFDcEIsR0FBRyxDQUFDLEdBQUcs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\n",
      "functionName": "reindex"
    },
    "pageComplete": {
      "path": "core/navigate.ts",
      "code": "(function() {\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    async function navigate(syntaxNode) {\n        if (!syntaxNode) {\n            return;\n        }\n        console.log(\"Attempting to navigate based on syntax node\", syntaxNode);\n        switch(syntaxNode.name){\n            case \"WikiLinkPage\":\n                await syscall(\"editor.navigate\", syntaxNode.text);\n                break;\n            case \"URL\":\n                await syscall(\"editor.openUrl\", syntaxNode.text);\n                break;\n            case \"Link\":\n                let match = /\\[[^\\\\]+\\]\\(([^\\)]+)\\)/.exec(syntaxNode.text);\n                if (match) {\n                    await syscall(\"editor.openUrl\", match[1]);\n                }\n        }\n    }\n    async function linkNavigate() {\n        navigate(await syscall(\"editor.getSyntaxNodeUnderCursor\"));\n    }\n    async function clickNavigate(event) {\n        if (event.ctrlKey || event.metaKey) {\n            let syntaxNode = await syscall(\"editor.getSyntaxNodeAtPos\", event.pos);\n            navigate(syntaxNode);\n        }\n    }\n    async function pageComplete() {\n        let prefix = await syscall(\"editor.matchBefore\", \"\\\\[\\\\[[\\\\w\\\\s]*\");\n        if (!prefix) {\n            return null;\n        }\n        let allPages = await syscall(\"space.listPages\");\n        return {\n            from: prefix.from + 2,\n            options: allPages.map((pageMeta)=>({\n                    label: pageMeta.name,\n                    type: \"page\"\n                })\n            )\n        };\n    }\n    return {\n        linkNavigate: linkNavigate,\n        clickNavigate: clickNavigate,\n        pageComplete: pageComplete\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvbmF2aWdhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjthQUFnQixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO21CQ1pjLFFBQVEsQ0FBQyxVQUFlLEVBQUUsQ0FBQztRQUN4QyxFQUFFLEdBQUcsVUFBVSxFQUFFLENBQUM7WUFDaEIsTUFBTTtRQUNSLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLENBQTZDLDhDQUFFLFVBQVU7UUFDckUsTUFBTSxDQUFFLFVBQVUsQ0FBQyxJQUFJO1lBQ3JCLElBQUksQ0FBQyxDQUFjO2dCQUNqQixLQUFLLFNBQVMsQ0FBaUIsa0JBQUUsVUFBVSxDQUFDLElBQUk7Z0JBQ2hELEtBQUs7WUFDUCxJQUFJLENBQUMsQ0FBSztnQkFDUixLQUFLLFNBQVMsQ0FBZ0IsaUJBQUUsVUFBVSxDQUFDLElBQUk7Z0JBQy9DLEtBQUs7WUFDUCxJQUFJLENBQUMsQ0FBTTtnQkFFVCxHQUFHLENBQUMsS0FBSyw0QkFBNEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJO2dCQUN6RCxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUM7b0JBQ1YsS0FBSyxTQUFTLENBQWdCLGlCQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUN6QyxDQUFDOztJQUVQLENBQUM7bUJBRXFCLFlBQVksR0FBRyxDQUFDO1FBQ3BDLFFBQVEsQ0FBQyxLQUFLLFNBQVMsQ0FBaUM7SUFDMUQsQ0FBQzttQkFFcUIsYUFBYSxDQUFDLEtBQWlCLEVBQUUsQ0FBQztRQUN0RCxFQUFFLEVBQUUsS0FBSyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDbkMsR0FBRyxDQUFDLFVBQVUsR0FBRyxLQUFLLFNBQVMsQ0FBMkIsNEJBQUUsS0FBSyxDQUFDLEdBQUc7WUFDckUsUUFBUSxDQUFDLFVBQVU7UUFDckIsQ0FBQztJQUNILENBQUM7bUJBRXFCLFlBQVksR0FBRyxDQUFDO1FBQ3BDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxTQUFTLENBQW9CLHFCQUFFLENBQWlCO1FBQ2xFLEVBQUUsR0FBRyxNQUFNLEVBQUUsQ0FBQztZQUNaLE1BQU0sQ0FBQyxJQUFJO1FBQ2IsQ0FBQztRQUNELEdBQUcsQ0FBQyxRQUFRLEdBQUcsS0FBSyxTQUFTLENBQWlCO1FBQzlDLE1BQU0sQ0FBQyxDQUFDO1lBQ04sSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLEdBQUcsQ0FBQztZQUNyQixPQUFPLEVBQUUsUUFBUSxDQUFDLEdBQUcsRUFBRSxRQUFhLElBQU0sQ0FBQztvQkFDekMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxJQUFJO29CQUNwQixJQUFJLEVBQUUsQ0FBTTtnQkFDZCxDQUFDOztRQUNILENBQUM7SUFDSCxDQUFDOztRQXhCcUIsWUFBWSxFQUFaLFlBQVk7UUFJWixhQUFhLEVBQWIsYUFBYTtRQU9iLFlBQVksRUFBWixZQUFZIn0=\n",
      "functionName": "pageComplete"
    },
    "linkNavigate": {
      "path": "core/navigate.ts",
      "code": "(function() {\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    async function navigate(syntaxNode) {\n        if (!syntaxNode) {\n            return;\n        }\n        console.log(\"Attempting to navigate based on syntax node\", syntaxNode);\n        switch(syntaxNode.name){\n            case \"WikiLinkPage\":\n                await syscall(\"editor.navigate\", syntaxNode.text);\n                break;\n            case \"URL\":\n                await syscall(\"editor.openUrl\", syntaxNode.text);\n                break;\n            case \"Link\":\n                let match = /\\[[^\\\\]+\\]\\(([^\\)]+)\\)/.exec(syntaxNode.text);\n                if (match) {\n                    await syscall(\"editor.openUrl\", match[1]);\n                }\n        }\n    }\n    async function linkNavigate() {\n        navigate(await syscall(\"editor.getSyntaxNodeUnderCursor\"));\n    }\n    async function clickNavigate(event) {\n        if (event.ctrlKey || event.metaKey) {\n            let syntaxNode = await syscall(\"editor.getSyntaxNodeAtPos\", event.pos);\n            navigate(syntaxNode);\n        }\n    }\n    async function pageComplete() {\n        let prefix = await syscall(\"editor.matchBefore\", \"\\\\[\\\\[[\\\\w\\\\s]*\");\n        if (!prefix) {\n            return null;\n        }\n        let allPages = await syscall(\"space.listPages\");\n        return {\n            from: prefix.from + 2,\n            options: allPages.map((pageMeta)=>({\n                    label: pageMeta.name,\n                    type: \"page\"\n                })\n            )\n        };\n    }\n    return {\n        linkNavigate: linkNavigate,\n        clickNavigate: clickNavigate,\n        pageComplete: pageComplete\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvbmF2aWdhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjthQUFnQixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO21CQ1pjLFFBQVEsQ0FBQyxVQUFlLEVBQUUsQ0FBQztRQUN4QyxFQUFFLEdBQUcsVUFBVSxFQUFFLENBQUM7WUFDaEIsTUFBTTtRQUNSLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLENBQTZDLDhDQUFFLFVBQVU7UUFDckUsTUFBTSxDQUFFLFVBQVUsQ0FBQyxJQUFJO1lBQ3JCLElBQUksQ0FBQyxDQUFjO2dCQUNqQixLQUFLLFNBQVMsQ0FBaUIsa0JBQUUsVUFBVSxDQUFDLElBQUk7Z0JBQ2hELEtBQUs7WUFDUCxJQUFJLENBQUMsQ0FBSztnQkFDUixLQUFLLFNBQVMsQ0FBZ0IsaUJBQUUsVUFBVSxDQUFDLElBQUk7Z0JBQy9DLEtBQUs7WUFDUCxJQUFJLENBQUMsQ0FBTTtnQkFFVCxHQUFHLENBQUMsS0FBSyw0QkFBNEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJO2dCQUN6RCxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUM7b0JBQ1YsS0FBSyxTQUFTLENBQWdCLGlCQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUN6QyxDQUFDOztJQUVQLENBQUM7bUJBRXFCLFlBQVksR0FBRyxDQUFDO1FBQ3BDLFFBQVEsQ0FBQyxLQUFLLFNBQVMsQ0FBaUM7SUFDMUQsQ0FBQzttQkFFcUIsYUFBYSxDQUFDLEtBQWlCLEVBQUUsQ0FBQztRQUN0RCxFQUFFLEVBQUUsS0FBSyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDbkMsR0FBRyxDQUFDLFVBQVUsR0FBRyxLQUFLLFNBQVMsQ0FBMkIsNEJBQUUsS0FBSyxDQUFDLEdBQUc7WUFDckUsUUFBUSxDQUFDLFVBQVU7UUFDckIsQ0FBQztJQUNILENBQUM7bUJBRXFCLFlBQVksR0FBRyxDQUFDO1FBQ3BDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxTQUFTLENBQW9CLHFCQUFFLENBQWlCO1FBQ2xFLEVBQUUsR0FBRyxNQUFNLEVBQUUsQ0FBQztZQUNaLE1BQU0sQ0FBQyxJQUFJO1FBQ2IsQ0FBQztRQUNELEdBQUcsQ0FBQyxRQUFRLEdBQUcsS0FBSyxTQUFTLENBQWlCO1FBQzlDLE1BQU0sQ0FBQyxDQUFDO1lBQ04sSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLEdBQUcsQ0FBQztZQUNyQixPQUFPLEVBQUUsUUFBUSxDQUFDLEdBQUcsRUFBRSxRQUFhLElBQU0sQ0FBQztvQkFDekMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxJQUFJO29CQUNwQixJQUFJLEVBQUUsQ0FBTTtnQkFDZCxDQUFDOztRQUNILENBQUM7SUFDSCxDQUFDOztRQXhCcUIsWUFBWSxFQUFaLFlBQVk7UUFJWixhQUFhLEVBQWIsYUFBYTtRQU9iLFlBQVksRUFBWixZQUFZIn0=\n",
      "functionName": "linkNavigate"
    },
    "clickNavigate": {
      "path": "core/navigate.ts",
      "code": "(function() {\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    async function navigate(syntaxNode) {\n        if (!syntaxNode) {\n            return;\n        }\n        console.log(\"Attempting to navigate based on syntax node\", syntaxNode);\n        switch(syntaxNode.name){\n            case \"WikiLinkPage\":\n                await syscall(\"editor.navigate\", syntaxNode.text);\n                break;\n            case \"URL\":\n                await syscall(\"editor.openUrl\", syntaxNode.text);\n                break;\n            case \"Link\":\n                let match = /\\[[^\\\\]+\\]\\(([^\\)]+)\\)/.exec(syntaxNode.text);\n                if (match) {\n                    await syscall(\"editor.openUrl\", match[1]);\n                }\n        }\n    }\n    async function linkNavigate() {\n        navigate(await syscall(\"editor.getSyntaxNodeUnderCursor\"));\n    }\n    async function clickNavigate(event) {\n        if (event.ctrlKey || event.metaKey) {\n            let syntaxNode = await syscall(\"editor.getSyntaxNodeAtPos\", event.pos);\n            navigate(syntaxNode);\n        }\n    }\n    async function pageComplete() {\n        let prefix = await syscall(\"editor.matchBefore\", \"\\\\[\\\\[[\\\\w\\\\s]*\");\n        if (!prefix) {\n            return null;\n        }\n        let allPages = await syscall(\"space.listPages\");\n        return {\n            from: prefix.from + 2,\n            options: allPages.map((pageMeta)=>({\n                    label: pageMeta.name,\n                    type: \"page\"\n                })\n            )\n        };\n    }\n    return {\n        linkNavigate: linkNavigate,\n        clickNavigate: clickNavigate,\n        pageComplete: pageComplete\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvbmF2aWdhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjthQUFnQixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO21CQ1pjLFFBQVEsQ0FBQyxVQUFlLEVBQUUsQ0FBQztRQUN4QyxFQUFFLEdBQUcsVUFBVSxFQUFFLENBQUM7WUFDaEIsTUFBTTtRQUNSLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLENBQTZDLDhDQUFFLFVBQVU7UUFDckUsTUFBTSxDQUFFLFVBQVUsQ0FBQyxJQUFJO1lBQ3JCLElBQUksQ0FBQyxDQUFjO2dCQUNqQixLQUFLLFNBQVMsQ0FBaUIsa0JBQUUsVUFBVSxDQUFDLElBQUk7Z0JBQ2hELEtBQUs7WUFDUCxJQUFJLENBQUMsQ0FBSztnQkFDUixLQUFLLFNBQVMsQ0FBZ0IsaUJBQUUsVUFBVSxDQUFDLElBQUk7Z0JBQy9DLEtBQUs7WUFDUCxJQUFJLENBQUMsQ0FBTTtnQkFFVCxHQUFHLENBQUMsS0FBSyw0QkFBNEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJO2dCQUN6RCxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUM7b0JBQ1YsS0FBSyxTQUFTLENBQWdCLGlCQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUN6QyxDQUFDOztJQUVQLENBQUM7bUJBRXFCLFlBQVksR0FBRyxDQUFDO1FBQ3BDLFFBQVEsQ0FBQyxLQUFLLFNBQVMsQ0FBaUM7SUFDMUQsQ0FBQzttQkFFcUIsYUFBYSxDQUFDLEtBQWlCLEVBQUUsQ0FBQztRQUN0RCxFQUFFLEVBQUUsS0FBSyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDbkMsR0FBRyxDQUFDLFVBQVUsR0FBRyxLQUFLLFNBQVMsQ0FBMkIsNEJBQUUsS0FBSyxDQUFDLEdBQUc7WUFDckUsUUFBUSxDQUFDLFVBQVU7UUFDckIsQ0FBQztJQUNILENBQUM7bUJBRXFCLFlBQVksR0FBRyxDQUFDO1FBQ3BDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsS0FBSyxTQUFTLENBQW9CLHFCQUFFLENBQWlCO1FBQ2xFLEVBQUUsR0FBRyxNQUFNLEVBQUUsQ0FBQztZQUNaLE1BQU0sQ0FBQyxJQUFJO1FBQ2IsQ0FBQztRQUNELEdBQUcsQ0FBQyxRQUFRLEdBQUcsS0FBSyxTQUFTLENBQWlCO1FBQzlDLE1BQU0sQ0FBQyxDQUFDO1lBQ04sSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLEdBQUcsQ0FBQztZQUNyQixPQUFPLEVBQUUsUUFBUSxDQUFDLEdBQUcsRUFBRSxRQUFhLElBQU0sQ0FBQztvQkFDekMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxJQUFJO29CQUNwQixJQUFJLEVBQUUsQ0FBTTtnQkFDZCxDQUFDOztRQUNILENBQUM7SUFDSCxDQUFDOztRQXhCcUIsWUFBWSxFQUFaLFlBQVk7UUFJWixhQUFhLEVBQWIsYUFBYTtRQU9iLFlBQVksRUFBWixZQUFZIn0=\n",
      "functionName": "clickNavigate"
    },
    "taskToggle": {
      "path": "core/task.ts",
      "code": "(function() {\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    async function taskToggle(event) {\n        let syntaxNode = await syscall(\"editor.getSyntaxNodeAtPos\", event.pos);\n        if (syntaxNode && syntaxNode.name === \"TaskMarker\") {\n            if (syntaxNode.text === \"[x]\" || syntaxNode.text === \"[X]\") {\n                await syscall(\"editor.dispatch\", {\n                    changes: {\n                        from: syntaxNode.from,\n                        to: syntaxNode.to,\n                        insert: \"[ ]\"\n                    },\n                    selection: {\n                        anchor: event.pos\n                    }\n                });\n            } else {\n                await syscall(\"editor.dispatch\", {\n                    changes: {\n                        from: syntaxNode.from,\n                        to: syntaxNode.to,\n                        insert: \"[x]\"\n                    },\n                    selection: {\n                        anchor: event.pos\n                    }\n                });\n            }\n        }\n    }\n    return {\n        taskToggle: taskToggle\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvdGFzay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO2FBQWdCLE9BQU8sQ0FBQyxJQUFZLEtBQUssSUFBSSxFQUFjLENBQUM7UUFDMUQsR0FBRyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssT0FBTztRQUU5QyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxHQUFLLENBQUM7WUFDdkMsSUFBSSxDQUFDLGFBQWEsQ0FDaEIsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFTLFVBQUUsQ0FBQztnQkFDMUIsTUFBTSxFQUFFLENBQUM7b0JBQ1AsRUFBRSxFQUFFLEtBQUs7b0JBQ1QsSUFBSSxFQUFFLElBQUk7b0JBQ1YsSUFBSSxFQUFFLElBQUk7b0JBQ1YsUUFBUSxFQUFFLE9BQU87Z0JBQ25CLENBQUM7WUFDSCxDQUFDO1FBRUwsQ0FBQztJQUNILENBQUM7bUJDWnFCLFVBQVUsQ0FBQyxLQUFpQixFQUFFLENBQUM7UUFDbkQsR0FBRyxDQUFDLFVBQVUsR0FBRyxLQUFLLFNBQVMsQ0FBMkIsNEJBQUUsS0FBSyxDQUFDLEdBQUc7UUFDckUsRUFBRSxFQUFFLFVBQVUsSUFBSSxVQUFVLENBQUMsSUFBSSxLQUFLLENBQVksYUFBRSxDQUFDO1lBQ25ELEVBQUUsRUFBRSxVQUFVLENBQUMsSUFBSSxLQUFLLENBQUssUUFBSSxVQUFVLENBQUMsSUFBSSxLQUFLLENBQUssTUFBRSxDQUFDO2dCQUMzRCxLQUFLLFNBQVMsQ0FBaUIsa0JBQUUsQ0FBQztvQkFDaEMsT0FBTyxFQUFFLENBQUM7d0JBQ1IsSUFBSSxFQUFFLFVBQVUsQ0FBQyxJQUFJO3dCQUNyQixFQUFFLEVBQUUsVUFBVSxDQUFDLEVBQUU7d0JBQ2pCLE1BQU0sRUFBRSxDQUFLO29CQUNmLENBQUM7b0JBQ0QsU0FBUyxFQUFFLENBQUM7d0JBQ1YsTUFBTSxFQUFFLEtBQUssQ0FBQyxHQUFHO29CQUNuQixDQUFDO2dCQUNILENBQUM7WUFDSCxDQUFDLE1BQU0sQ0FBQztnQkFDTixLQUFLLFNBQVMsQ0FBaUIsa0JBQUUsQ0FBQztvQkFDaEMsT0FBTyxFQUFFLENBQUM7d0JBQ1IsSUFBSSxFQUFFLFVBQVUsQ0FBQyxJQUFJO3dCQUNyQixFQUFFLEVBQUUsVUFBVSxDQUFDLEVBQUU7d0JBQ2pCLE1BQU0sRUFBRSxDQUFLO29CQUNmLENBQUM7b0JBQ0QsU0FBUyxFQUFFLENBQUM7d0JBQ1YsTUFBTSxFQUFFLEtBQUssQ0FBQyxHQUFHO29CQUNuQixDQUFDO2dCQUNILENBQUM7WUFDSCxDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7O1FBM0JxQixVQUFVLEVBQVYsVUFBVSJ9\n",
      "functionName": "taskToggle"
    },
    "insertToday": {
      "path": "core/dates.ts",
      "code": "(function() {\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    async function insertToday() {\n        let niceDate = new Date().toISOString().split(\"T\")[0];\n        await syscall(\"editor.insertAtCursor\", niceDate);\n    }\n    return {\n        insertToday: insertToday\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvZGF0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjthQUFnQixPQUFPLENBQUMsSUFBWSxLQUFLLElBQUksRUFBYyxDQUFDO1FBQzFELEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU87UUFFOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sR0FBSyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQ2hCLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBUyxVQUFFLENBQUM7Z0JBQzFCLE1BQU0sRUFBRSxDQUFDO29CQUNQLEVBQUUsRUFBRSxLQUFLO29CQUNULElBQUksRUFBRSxJQUFJO29CQUNWLElBQUksRUFBRSxJQUFJO29CQUNWLFFBQVEsRUFBRSxPQUFPO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUVMLENBQUM7SUFDSCxDQUFDO21CQ2JxQixXQUFXLEdBQUcsQ0FBQztRQUNuQyxHQUFHLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxJQUFJLEdBQUcsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFHLElBQUUsQ0FBQztRQUNwRCxLQUFLLFNBQVMsQ0FBdUIsd0JBQUUsUUFBUTtJQUNqRCxDQUFDOztRQUhxQixXQUFXLEVBQVgsV0FBVyJ9\n",
      "functionName": "insertToday"
    },
    "toggle_h1": {
      "path": "core/markup.ts",
      "code": "(function() {\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    async function toggleH1() {\n        await togglePrefix(\"# \");\n    }\n    async function toggleH2() {\n        await togglePrefix(\"## \");\n    }\n    function lookBack(s, pos, backString) {\n        return s.substring(pos - backString.length, pos) === backString;\n    }\n    async function togglePrefix(prefix) {\n        let text = await syscall(\"editor.getText\");\n        let pos = await syscall(\"editor.getCursor\");\n        if (text[pos] === \"\\n\") {\n            pos--;\n        }\n        while(pos > 0 && text[pos] !== \"\\n\"){\n            if (lookBack(text, pos, prefix)) {\n                await syscall(\"editor.replaceRange\", pos - prefix.length, pos, \"\");\n                return;\n            }\n            pos--;\n        }\n        if (pos) {\n            pos++;\n        }\n        await syscall(\"editor.insertAtPos\", prefix, pos);\n    }\n    return {\n        toggleH1: toggleH1,\n        toggleH2: toggleH2\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvbWFya3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7YUFBZ0IsT0FBTyxDQUFDLElBQVksS0FBSyxJQUFJLEVBQWMsQ0FBQztRQUMxRCxHQUFHLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxPQUFPO1FBRTlDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEdBQUssQ0FBQztZQUN2QyxJQUFJLENBQUMsYUFBYSxDQUNoQixHQUFHLENBQUMsV0FBVyxDQUFDLENBQVMsVUFBRSxDQUFDO2dCQUMxQixNQUFNLEVBQUUsQ0FBQztvQkFDUCxFQUFFLEVBQUUsS0FBSztvQkFDVCxJQUFJLEVBQUUsSUFBSTtvQkFDVixJQUFJLEVBQUUsSUFBSTtvQkFDVixRQUFRLEVBQUUsT0FBTztnQkFDbkIsQ0FBQztZQUNILENBQUM7UUFFTCxDQUFDO0lBQ0gsQ0FBQzttQkNicUIsUUFBUSxHQUFHLENBQUM7UUFDaEMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFJO0lBQ3pCLENBQUM7bUJBRXFCLFFBQVEsR0FBRyxDQUFDO1FBQ2hDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBSztJQUMxQixDQUFDO2FBRVEsUUFBUSxDQUFDLENBQVMsRUFBRSxHQUFXLEVBQUUsVUFBa0IsRUFBVyxDQUFDO1FBQ3RFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLEdBQUcsTUFBTSxVQUFVO0lBQ2pFLENBQUM7bUJBRWMsWUFBWSxDQUFDLE1BQWMsRUFBRSxDQUFDO1FBQzNDLEdBQUcsQ0FBQyxJQUFJLEdBQUksS0FBSyxTQUFTLENBQWdCO1FBQzFDLEdBQUcsQ0FBQyxHQUFHLEdBQUksS0FBSyxTQUFTLENBQWtCO1FBQzNDLEVBQUUsRUFBRSxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUksS0FBRSxDQUFDO1lBQ3ZCLEdBQUc7UUFDTCxDQUFDO2NBQ00sR0FBRyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUksSUFBRSxDQUFDO1lBQ3JDLEVBQUUsRUFBRSxRQUFRLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxNQUFNLEdBQUcsQ0FBQztnQkFFaEMsS0FBSyxTQUFTLENBQXFCLHNCQUFFLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFFO2dCQUNqRSxNQUFNO1lBQ1IsQ0FBQztZQUNELEdBQUc7UUFDTCxDQUFDO1FBQ0QsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDO1lBQ1IsR0FBRztRQUNMLENBQUM7UUFDRCxLQUFLLFNBQVMsQ0FBb0IscUJBQUUsTUFBTSxFQUFFLEdBQUc7SUFDakQsQ0FBQzs7UUE5QnFCLFFBQVEsRUFBUixRQUFRO1FBSVIsUUFBUSxFQUFSLFFBQVEifQ==\n",
      "functionName": "toggleH1"
    },
    "toggle_h2": {
      "path": "core/markup.ts",
      "code": "(function() {\n    function syscall(name, ...args) {\n        let reqId = Math.floor(Math.random() * 1000000);\n        return new Promise((resolve, reject)=>{\n            self.dispatchEvent(new CustomEvent(\"syscall\", {\n                detail: {\n                    id: reqId,\n                    name: name,\n                    args: args,\n                    callback: resolve\n                }\n            }));\n        });\n    }\n    async function toggleH1() {\n        await togglePrefix(\"# \");\n    }\n    async function toggleH2() {\n        await togglePrefix(\"## \");\n    }\n    function lookBack(s, pos, backString) {\n        return s.substring(pos - backString.length, pos) === backString;\n    }\n    async function togglePrefix(prefix) {\n        let text = await syscall(\"editor.getText\");\n        let pos = await syscall(\"editor.getCursor\");\n        if (text[pos] === \"\\n\") {\n            pos--;\n        }\n        while(pos > 0 && text[pos] !== \"\\n\"){\n            if (lookBack(text, pos, prefix)) {\n                await syscall(\"editor.replaceRange\", pos - prefix.length, pos, \"\");\n                return;\n            }\n            pos--;\n        }\n        if (pos) {\n            pos++;\n        }\n        await syscall(\"editor.insertAtPos\", prefix, pos);\n    }\n    return {\n        toggleH1: toggleH1,\n        toggleH2: toggleH2\n    };\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvemVmL2dpdC9udWdnZXQvcGx1Z2lucy9jb3JlL2xpYi9zeXNjYWxsLnRzIiwiZmlsZTovLy9Vc2Vycy96ZWYvZ2l0L251Z2dldC9wbHVnaW5zL2NvcmUvbWFya3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7YUFBZ0IsT0FBTyxDQUFDLElBQVksS0FBSyxJQUFJLEVBQWMsQ0FBQztRQUMxRCxHQUFHLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxPQUFPO1FBRTlDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEdBQUssQ0FBQztZQUN2QyxJQUFJLENBQUMsYUFBYSxDQUNoQixHQUFHLENBQUMsV0FBVyxDQUFDLENBQVMsVUFBRSxDQUFDO2dCQUMxQixNQUFNLEVBQUUsQ0FBQztvQkFDUCxFQUFFLEVBQUUsS0FBSztvQkFDVCxJQUFJLEVBQUUsSUFBSTtvQkFDVixJQUFJLEVBQUUsSUFBSTtvQkFDVixRQUFRLEVBQUUsT0FBTztnQkFDbkIsQ0FBQztZQUNILENBQUM7UUFFTCxDQUFDO0lBQ0gsQ0FBQzttQkNicUIsUUFBUSxHQUFHLENBQUM7UUFDaEMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFJO0lBQ3pCLENBQUM7bUJBRXFCLFFBQVEsR0FBRyxDQUFDO1FBQ2hDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBSztJQUMxQixDQUFDO2FBRVEsUUFBUSxDQUFDLENBQVMsRUFBRSxHQUFXLEVBQUUsVUFBa0IsRUFBVyxDQUFDO1FBQ3RFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLEdBQUcsTUFBTSxVQUFVO0lBQ2pFLENBQUM7bUJBRWMsWUFBWSxDQUFDLE1BQWMsRUFBRSxDQUFDO1FBQzNDLEdBQUcsQ0FBQyxJQUFJLEdBQUksS0FBSyxTQUFTLENBQWdCO1FBQzFDLEdBQUcsQ0FBQyxHQUFHLEdBQUksS0FBSyxTQUFTLENBQWtCO1FBQzNDLEVBQUUsRUFBRSxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUksS0FBRSxDQUFDO1lBQ3ZCLEdBQUc7UUFDTCxDQUFDO2NBQ00sR0FBRyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUksSUFBRSxDQUFDO1lBQ3JDLEVBQUUsRUFBRSxRQUFRLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxNQUFNLEdBQUcsQ0FBQztnQkFFaEMsS0FBSyxTQUFTLENBQXFCLHNCQUFFLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFFO2dCQUNqRSxNQUFNO1lBQ1IsQ0FBQztZQUNELEdBQUc7UUFDTCxDQUFDO1FBQ0QsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDO1lBQ1IsR0FBRztRQUNMLENBQUM7UUFDRCxLQUFLLFNBQVMsQ0FBb0IscUJBQUUsTUFBTSxFQUFFLEdBQUc7SUFDakQsQ0FBQzs7UUE5QnFCLFFBQVEsRUFBUixRQUFRO1FBSVIsUUFBUSxFQUFSLFFBQVEifQ==\n",
      "functionName": "toggleH2"
    }
  }
}